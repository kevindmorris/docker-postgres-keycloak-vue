services:
  postgres:
    image: postgres:17
    container_name: db
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - template_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    container_name: auth
    command:
      - "start-dev"
      - "--import-realm"
    volumes:
      - ./template-realm.json:/opt/keycloak/data/import/template-realm.json
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - template_network

  vue:
    build: .
    container_name: ui
    ports:
      - 3000:80
    restart: always
    depends_on:
      - keycloak
    networks:
      - template_network

volumes:
  postgres_volume:
    name: postgres_volume

networks:
  template_network:
    name: template_network
